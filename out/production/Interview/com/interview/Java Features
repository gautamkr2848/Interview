Java 7
    1. switch with String
    2. Multiple Cache Blocks
    3. try with resources
        try(A a = new A()){

        }
    4. underscore with variable
        int a = 6_453;
    5. Generic Type

Java 8
    1. Functional Interface and lambda expression
            Functional interfaces are interfaces which represent some functionality.
            Can have only one abstract method.
    2. Stream API
    3. Default and static methods in Interface
    4. forEach() method in Iterable interface

Java 9
    1. Private and static methods in interface
    2. List.of(1, 2, 3);
       Set.of();
       map.of();
    3. Improved try with resource Blocks

        Public static void main(String[] args) {
            MyThread th = new MyThread();
            try (th) {
                Th.executeSomething();
            } catch (Exception ex) {}
        }

    4. Immutable Collection

Java 10
    1. GC interface
    2. Local-Variable Type Inference
        a. new keyword var is added
            for (var number : numbers) {

            }

Java 11
    1. String API Updates
        a. isBlank()
        b. lines()
        c. strip()
        d. repeat()
    2. File API update
        a. Files.writeString() & Files.readString()
    3. IsEmpty() method on Optional Class

Java 12
    1. Collectors.teeing() in Stream API
    2. String API Changes
    3. Files.mismatch(Path, Path)
    4. Compact Number Formatting
    5. Support for Unicode 11
    6. Switch Expressions (Preview)




